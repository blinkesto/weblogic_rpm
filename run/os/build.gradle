apply plugin: 'idea'

import org.apache.tools.ant.filters.ReplaceTokens
def myProps = new Properties()
def STAGE_DIR = "/mnt/files"
def PROJECT_ROOT=rootProject.projectDir.toString()
def vm_name = "weblogic-$os-$wls"

task help(){
    doLast {
        println rootProject.projectDir
    }
}

task install(type: Exec){
    def prop_path = PROJECT_ROOT + "/properties/$os/"
    def prop_file = "weblogic" + "$wls" + ".properties"

    file(prop_path + prop_file).withInputStream{
        myProps.load(it);
    }

    // Update vm_name
    myProps.install_type = "jar"
    myProps.setProperty("vm_name", vm_name + myProps.install_type )

    dependsOn "copy_templates", "copy_binaries"
    workingDir PROJECT_ROOT + "/build/$os/" + myProps.vm_name

    //
    commandLine 'vagrant', 'up'
}

task halt(type: Exec){
    def prop_path = PROJECT_ROOT + "/properties/$os/"
    def prop_file = "weblogic" + "$wls" + ".properties"

    file(prop_path + prop_file).withInputStream{
        myProps.load(it);
    }

    // Update vm_name
    myProps.install_type = "jar"
    myProps.setProperty("vm_name", vm_name + myProps.install_type )

    dependsOn "copy_templates", "copy_binaries"
    workingDir PROJECT_ROOT + "/build/$os/" + myProps.vm_name

    //
    commandLine 'vagrant', 'halt'
}

task provision(type: Exec){
    def prop_path = PROJECT_ROOT + "/properties/$os/"
    def prop_file = "weblogic" + "$wls" + ".properties"

    file(prop_path + prop_file).withInputStream{
        myProps.load(it);
    }

    // Update vm_name
    myProps.install_type = "jar"
    myProps.setProperty("vm_name", vm_name + myProps.install_type )

    dependsOn "copy_templates", "copy_binaries"
    workingDir PROJECT_ROOT + "/build/$os/" + myProps.vm_name

    //
    commandLine 'vagrant', 'provision'
}

task copy_templates(type: Copy){
    def template_dest = PROJECT_ROOT + "/build/$os/" + myProps.vm_name
    def template_src = "templates"

    myProps.stage_dir = STAGE_DIR
    myProps.os = os
    println "Copy from $template_src into $template_dest"
    println myProps

    from("$template_src"){
        include '*.template'
        include 'files/os/*.template'
        filter(ReplaceTokens, tokens: myProps)
        rename('(.*).template', '$1')
    }
    into "$template_dest"
}

task copy_binaries(type: Copy){
    def template_dest = PROJECT_ROOT + "/build/$os/" + myProps.vm_name + "/files"

    from(PROJECT_ROOT + '/files'){
        include "$myProps.jdk_rpm"
        include "$myProps.fmw_installer"
    }
    into template_dest
}